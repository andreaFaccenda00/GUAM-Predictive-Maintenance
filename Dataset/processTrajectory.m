function [Data] = processTrajectory(i, baseFolder, csv_name, fault_code, Data)
    trajectoryFolder = fullfile(baseFolder, sprintf('Trajectory_%d', i));
    csvFile = fullfile(trajectoryFolder, csv_name);

    if ~isfile(csvFile)
        fprintf('File not found: %s. Skipping...\n', csvFile);
        return;
    end

    T = readtable(csvFile);
    T.Time = seconds(T.Time);
    TT = table2timetable(T, 'RowTimes', 'Time');
    TT.Time.Format = 'mm:ss.SSS';
    
    noiseAmp = 0.01;  
    noiseVars = {'Vtot', 'Omeg_BIb_x', 'Omeg_BIb_y', 'Omeg_BIb_z', ...
                 'Accel_bIb_x', 'Accel_bIb_y', 'Accel_bIb_z', ...
                 'Euler_phi', 'Euler_theta', 'Euler_psi', 'gamma', 'chi'};
    
    function tt = convertToTimeDataTableNoise(TT_segment, varName)
        data = TT_segment.(varName);
        if ismember(varName, noiseVars)
            data = data + noiseAmp * randn(size(data));
        end
        tt = timetable(TT_segment.Time, data, 'VariableNames', {'Data'});
    end

    createDataRow = @(TT_segment, faultCode) table(...
        {convertToTimeDataTableNoise(TT_segment, 'EngineCmd1')}, {convertToTimeDataTableNoise(TT_segment, 'EngineCmd2')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'EngineCmd3')}, {convertToTimeDataTableNoise(TT_segment, 'EngineCmd4')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'EngineCmd5')}, {convertToTimeDataTableNoise(TT_segment, 'EngineCmd6')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'EngineCmd7')}, {convertToTimeDataTableNoise(TT_segment, 'EngineCmd8')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'EngineCmd9')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'CtrlSurfaceCmd_1')}, {convertToTimeDataTableNoise(TT_segment, 'CtrlSurfaceCmd_2')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'CtrlSurfaceCmd_3')}, {convertToTimeDataTableNoise(TT_segment, 'CtrlSurfaceCmd_4')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'CtrlSurfaceCmd_5')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'Vtot')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'Omeg_BIb_x')}, {convertToTimeDataTableNoise(TT_segment, 'Omeg_BIb_y')}, {convertToTimeDataTableNoise(TT_segment, 'Omeg_BIb_z')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'Accel_bIb_x')}, {convertToTimeDataTableNoise(TT_segment, 'Accel_bIb_y')}, {convertToTimeDataTableNoise(TT_segment, 'Accel_bIb_z')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'Euler_phi')}, {convertToTimeDataTableNoise(TT_segment, 'Euler_theta')}, {convertToTimeDataTableNoise(TT_segment, 'Euler_psi')}, ...
        {convertToTimeDataTableNoise(TT_segment, 'gamma')}, {convertToTimeDataTableNoise(TT_segment, 'chi')}, ...
        faultCode, ...
        'VariableNames', ...
        {'EngineCmd1','EngineCmd2','EngineCmd3','EngineCmd4','EngineCmd5','EngineCmd6','EngineCmd7','EngineCmd8','EngineCmd9', ...
         'SurfaceCmd_1','SurfaceCmd_2','SurfaceCmd_3','SurfaceCmd_4','SurfaceCmd_5', ...
         'Vtot', ...
         'Omega_x','Omega_y','Omega_z', ...
         'Accel_x','Accel_y','Accel_z', ...
         'Euler_phi','Euler_theta','Euler_psi', ...
         'Gamma','Chi','FaultCode'});
   
    faultArray = TT.Fault;
    idxChange = [1; find(diff(faultArray) ~= 0) + 1; height(TT) + 1];
    
    for j = 1:length(idxChange)-1
        TT_segment = TT(idxChange(j):(idxChange(j+1)-1), :);
        currentFault = TT_segment.Fault(1);
        
        if currentFault == 0
            faultCodeCurrent = 0;
        elseif currentFault == 1
            faultCodeCurrent = fault_code;
        else
            faultCodeCurrent = currentFault;
        end
        
        row = createDataRow(TT_segment, faultCodeCurrent);
        Data = [Data; row];
    end
end
